version: "2.2"

services:
  backend:
    build: ./backend
    depends_on:
      - db
    container_name: backend
    env_file: ./backend/docker-compose.env
    command: bash ./scripts/run_local.sh
    volumes:
      - ./backend/:/app
    ports:
      - "8000:8000"
    restart: "no"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    env_file: frontend/docker-compose.env
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/frontend/src
      - ./frontend/public:/frontend/public

  db:
    image: library/postgres:13.13-bullseye
    container_name: stock_db
    environment:
      POSTGRES_DB: stock_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: top-secret
    volumes:
      - postgres:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    restart: "no"

  redis:
    image: redis
    container_name: invoice_redis
    restart: always
    command: redis-server --requirepass sZA8khTCpbHkeU --loglevel debug
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  celery:
    depends_on:
      - redis
    build: ./backend
    container_name: invoice_celery_worker
    env_file: ./backend/docker-compose.env
    command: celery -A config.celery worker -n default_worker -l info
    volumes:
      - ./backend/:/app
    restart: "no"

  celery_flower:
    depends_on:
      - redis
      - celery
      - db
    build: ./backend
    container_name: invoice_celery_flower
    env_file: ./backend/docker-compose.env
    command: celery -A apps.config.celery flower --port=5555
    ports:
      - 5555:5555
    restart: always

  celery_beat:
    depends_on:
      - redis
    build: ./backend
    container_name: invoice_celery_beat
    env_file: ./backend/docker-compose.env
    command: celery -A config.celery beat -l info
    volumes:
      - ./backend/:/app
    restart: "no"

volumes:
  postgres:
  redis_data:
